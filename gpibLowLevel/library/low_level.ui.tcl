# interface generated by SpecTcl version 1.0 from /home/fab/Tcl/gpib/low_level.ui
#   root     is the parent window for this user interface

proc low_level_ui {root args} {

	# this treats "." as a special case

	if {$root == "."} {
	    set base ""
	} else {
	    set base $root
	}
    
	frame $base.frame#1

	frame $base.frame#9

	frame $base.frame#10

	frame $base.frame_MLA_MTA

	button $base.button_IFC \
		-command GPIB::IFC \
		-text IFC

	button $base.button_DCL \
		-command {GPIB::Command DCL} \
		-text DCL

	button $base.button_SPE \
		-command {GPIB::Command SPE} \
		-text SPE

	button $base.button_SPD \
		-command {GPIB::Command SPD} \
		-text SPD

	button $base.button_UNL \
		-command {GPIB::Command UNL} \
		-text UNL

	button $base.button_UNT \
		-command {GPIB::Command UNT} \
		-text UNT

	button $base.button_GET \
		-command {GPIB::Command GET} \
		-text GET

	button $base.button_GTL \
		-command {GPIB::Command GTL} \
		-text GTL

	button $base.button_SDC \
		-command {GPIB::Command SDC} \
		-text SDC

	button $base.button_TCT \
		-command {GPIB::Command TCT} \
		-text TCT

	button $base.button_readByte \
		-command GPIB::readByte \
		-text {read Byte}

	button $base.button_rescan_ll \
		-command GPIB::rescanDevices_lowLevel \
		-text {rescan Devices}

	button $base.button#38 \
		-command {GPIB::Command2 MTA 0} \
		-text {MTA gpib0}

	button $base.button#39 \
		-command {GPIB::Command2 MLA 0} \
		-text {MLA gpib0}


	# Geometry management

	grid $base.frame#1 -in $root	-row 1 -column 1 
	grid $base.frame#9 -in $base.frame#1	-row 1 -column 1 
	grid $base.frame#10 -in $base.frame#9	-row 2 -column 1  \
		-columnspan 10 \
		-sticky w
	grid $base.frame_MLA_MTA -in $base.frame#10	-row 1 -column 2 
	grid $base.button_IFC -in $base.frame#9	-row 1 -column 1 
	grid $base.button_DCL -in $base.frame#9	-row 1 -column 2 
	grid $base.button_SPE -in $base.frame#9	-row 1 -column 3 
	grid $base.button_SPD -in $base.frame#9	-row 1 -column 4 
	grid $base.button_UNL -in $base.frame#9	-row 1 -column 5 
	grid $base.button_UNT -in $base.frame#9	-row 1 -column 6 
	grid $base.button_GET -in $base.frame#9	-row 1 -column 7 
	grid $base.button_GTL -in $base.frame#9	-row 1 -column 8 
	grid $base.button_SDC -in $base.frame#9	-row 1 -column 9 
	grid $base.button_TCT -in $base.frame#9	-row 1 -column 10 
	grid $base.button_readByte -in $base.frame#10	-row 1 -column 1 
	grid $base.button_rescan_ll -in $base.frame#10	-row 1 -column 3 
	grid $base.button#38 -in $base.frame_MLA_MTA	-row 1 -column 1  \
		-sticky w
	grid $base.button#39 -in $base.frame_MLA_MTA	-row 1 -column 2  \
		-sticky e

	# Resize behavior management

	grid rowconfigure $base.frame_MLA_MTA 1 -weight 0 -minsize 30
	grid rowconfigure $base.frame_MLA_MTA 2 -weight 0 -minsize 30
	grid columnconfigure $base.frame_MLA_MTA 1 -weight 0 -minsize 30
	grid columnconfigure $base.frame_MLA_MTA 2 -weight 0 -minsize 30

	grid rowconfigure $root 1 -weight 1 -minsize 8
	grid columnconfigure $root 1 -weight 0 -minsize 453

	grid rowconfigure $base.frame#1 1 -weight 0 -minsize 30
	grid columnconfigure $base.frame#1 1 -weight 0 -minsize 30

	grid rowconfigure $base.frame#10 1 -weight 1 -minsize 30
	grid columnconfigure $base.frame#10 1 -weight 0 -minsize 30
	grid columnconfigure $base.frame#10 2 -weight 0 -minsize 234
	grid columnconfigure $base.frame#10 3 -weight 0 -minsize 137

	grid rowconfigure $base.frame#9 1 -weight 0 -minsize 30
	grid rowconfigure $base.frame#9 2 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 1 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 2 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 3 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 4 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 5 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 6 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 7 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 8 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 9 -weight 0 -minsize 30
	grid columnconfigure $base.frame#9 10 -weight 0 -minsize 30
# additional interface code
# end additional interface code

}


# Allow interface to be run "stand-alone" for testing

catch {
    if {$argv0 == [info script]} {
	wm title . "Testing low_level"
	low_level_ui .
    }
}
