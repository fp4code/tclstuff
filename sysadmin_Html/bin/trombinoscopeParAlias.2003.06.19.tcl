#!/bin/sh
#\
exec tclsh "$0" ${1+"$@"}

# 19 décembre 2002 (FP)
# 23 décembre 2002 (FP)
# 19 juin 2003 (FP) changement de DYNAMIC et test de l'exécution sur soda,
#                   passage du source en utf-8, codage des fichiers en iso8859-1
                   

if {[info hostname] != "soda.lpn.prive"} {
    puts stderr "Doit être exécuté sur soda.lpn.prive et non sur [info hostname]."
    exit 1
}

set BASE  /var/www/html/p10admin/
set DYNAMIC   Lpn/dynamic
set DATABASES Lpn/databases

package require fidev
package require fichUtils 0.2

proc readLines {file} {
    global BASE DATABASES FICHIERS
    set fifi [file join $BASE $DATABASES $file]
    lappend FICHIERS $file
    set f [open $fifi r]
    set lines [read -nonewline $f]
    close $f
    set ret [list]
    foreach l [split $lines \n] {
        if {![regexp "^\#" $l] && ![regexp {^[\t ]*$} $l]} {
            lappend ret $l
        }
    }
    return $ret
}

set SCRIPT [file join [pwd] [info script]]
while {[file type $SCRIPT] == "link"} {
    set SCRIPT [file readlink $SCRIPT]
}

foreach l [readLines login] {
    set login [lindex $l 0]
    set name [lrange $l 3 end]
    set NAME($login) $name
}

foreach l [readLines alias_login] {
    set login [lindex $l 0]
    set regular [lindex $l 1]
    set aliases [lindex $l 2]
    set REGULAR($login) $regular
    set ALIASES($login) $aliases
}

foreach l [readLines alias_lpn-foobar] {
    set alias [lindex $l 0]
    set regulars [lindex $l 1]
    set REGULARS($alias) $regulars
}

foreach l [readLines piece_et_phone] {
    if {[llength $l] % 2 != 1} {
        return -code error "erreur dans piece_et_phone, ligne \"$l\""
    }
    set PIETE([lindex $l 0]) [lrange $l 1 end]
}

foreach login [array names NAME] {
    if {[info exists REGULAR($login)]} {
        set LOGIN($REGULAR($login)) $login
    } else {
        puts stderr "No regular alias for $login ($NAME($login))"
    }
}

set INFO {
    NAME      login -> "Prenom Nom"
    LOGIN     Prenom.Nom -> login
    REGULAR   login      -> Prenom.Nom
    ALIASES   login      -> lpn...
    REGULARS  lpn-foobar -> "Prenom1.Nom1 Prenom2.Nom2 ..."
}

proc anl {sName string} {
    upvar $sName s
    append s $string\n
}

proc a {sName string} {
    upvar $sName s
    append s $string
}

proc printNames {} {
    global REGULAR
    set allNames ""
    set largest 0
    foreach login [array names REGULAR] {
        lappend allNames $REGULAR($login)
        set longueur [string length $REGULAR($login)]
        if {$longueur > $largest} {
            set largest $longueur
        }
    }
    incr largest
    foreach aa [lsort $allNames] {
        # puts [format %-${largest}s $aa]
    }
}

printNames

foreach login [array names REGULAR] {
    set regular $REGULAR($login)
    if {![info exists NAME($login)]} continue
    set name $NAME($login)
    set html ""
    anl html {<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional">}
    a   html {<!--== automatically generated by }
    a   html [::fidev::fichUtils::followLinks $SCRIPT]
    anl html { ==-->}
    anl html {<html>}
    anl html {<head>}
    anl html {  <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">}
    anl html "  <title>$NAME($login)</title>"
    anl html {</head>}
    anl html {<body>}
    
    if {[file exists [file join $BASE $DATABASES trombines $regular.gif]]} {
        set image "../databases/trombines/$regular.gif"
        set clic 0
    } else {
        set image "../databases/trombines/clic.gif"
        set clic 1
    }
    if {$clic} { 
        anl html {<a href="../donneTaPhoto.html">}
    }
    a   html {        <img src="}
    a   html $image
    a   html {" ALIGN="MIDDLE" BORDER="0" ALT="}
    a   html $name
    anl html {">}
    if {$clic} { 
        anl html {</a>}
    }            
    anl html "<br>${name}"
    anl html "<br><a href = \"mailto:${regular}@Lpn.cnrs.fr\">email</a>: ${regular}@Lpn.cnrs.fr"
    set first 1
    anl html "<br>alias: "
    set lpnas [list]
    set autres [list]
    foreach a $ALIASES($login) {
        if {[string match "lpn-*" $a]} {
            lappend lpnas $a
        } else {
            lappend autres $a
        }
    }
    foreach a [lsort $lpnas] {
        if {$first} {
            set first 0
        } else {
            a   html ", "
        }
        a   html "<a href = \"trombines_${a}.html\">${a}</a>"
    }
    foreach a [lsort $autres] {
        if {$first} {
            set first 0
        } else {
            a   html ", "
        }
        a   html "<a href = \"aliases.html\#${a}\">${a}</a>"
    }
    anl html {}
    a   html "<br>pièce (tél.) :"
    if {[info exists PIETE($regular)]} {
        set first 1
        foreach {p t} $PIETE($regular) {
            if {$first} {
                set first 0
            } else {
                a   html ","
            }
            a   html " ${p} \(${t}\)"
        }
    } else {
        puts stderr "Pas de pièce/tél. pour $regular"
    }
    anl html "<br>login: ${login}"
    anl html {</body>}
    anl html {</html>}

    set fifi [file join $BASE $DYNAMIC $regular.html]
    set f [open $fifi w]
    fconfigure $f -encoding iso8859-1
    puts -nonewline $f $html
    close $f
}


foreach alias [array names REGULARS] {
    set html ""
    anl html {<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional">}
    a   html {<!--== automatically generated by }
    a   html [::fidev::fichUtils::followLinks $SCRIPT]
    anl html { ==-->}
    anl html {<html>}
    anl html {<head>}
    anl html {  <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">}
    anl html "  <title>Trombinoscope $alias</title>"
    anl html {</head>}
    anl html {<body>}

    ############ ##### deux colonnes ###
    anl html {  <table BORDER=0 CELLSPACING=4 WIDTH="100%" SUMMARY="deux colonnes">}
    anl html {    <tr>}
    anl html {      <td VALIGN=TOP>}
    #    anl html {        <table BORDER=0 CELLSPACING=0 CELLPADDING=0 COLS=1 WIDTH="91" BACKGROUND="images/site_navig_fond.jpg" >}
    ######################## colonne de gauche ###
    anl html {        <table BORDER=0 CELLSPACING=0 CELLPADDING=0 COLS=1 WIDTH="91" SUMMARY="colonne de gauche">}
    anl html {          <tr>}
    anl html {            <td><img SRC="images/site_navig_haut.jpg" height=28 width=91 ALT="alias :"></td>}
    anl html {          </tr>}
    foreach aliasbis [lsort [array names REGULARS]] {
        anl html {          <tr>}
        a   html {            <td>}
        if {$alias == $aliasbis} {
            a   html "<em>$aliasbis</em>"
        } else {
            a   html {<a href="}
            a   html "trombines_${aliasbis}.html"
            a   html {">}
            a   html "$aliasbis"
            a   html {</a>}
        }
        anl html {</td>}
        anl html {          </tr>}
    }
    anl html {        </table>}
    ######################## colonne de gauche ###
    anl html {      </td>}
    anl html {      <td VALIGN=TOP WIDTH="100%">}
    a   html {<center>Trombines de l'alias }
    a   html $alias
    anl html {</center>}
    anl html {<hr>}

    ######################## colonne de droite ###
    a   html {<table BORDER=1 CELLPADDING=2 CELLSPACING=2 SUMMARY="}
    a   html "Trombines de l'alias $alias"
    anl html {">}
    
    set ic 0
    set tr0 ""
    set tr1 ""
    anl tr0 {  <tr height="49%">}
    anl tr1 {  <tr height="20%">}
    foreach regular $REGULARS($alias) {
	if {![info exists LOGIN($regular)]} {
	    puts stderr "No login for $regular"
	    continue
	}
        set name $NAME($LOGIN($regular))
        if {[file exists [file join $BASE $DATABASES trombines $regular.gif]]} {
            set image "../databases/trombines/$regular.gif"
            set clic 0
        } else {
            set image "../databases/trombines/clic.gif"
            set clic 1
        }
        if {$ic > 3} {
            anl tr0 {  </tr>}
            anl tr1 {  </tr>}
            a   html $tr0 
            a   html $tr1
            set ic 0
            set tr0 ""
            set tr1 ""
            anl tr0 {  <tr height="49%">}
            anl tr1 {  <tr height="20%">}
        }
        anl tr0 {    <td width="20%" height="49%" valign="middle" align="center">}
        anl tr0 {      <div align="center">}
        if {$clic} { 
            anl tr0 {<a href="../donneTaPhoto.html">}
        }
        a   tr0 {        <img src="}
        a   tr0 $image
        a   tr0 {" ALIGN="MIDDLE" BORDER="0" ALT="}
        a   tr0 $name
        anl tr0 {">}
        if {$clic} { 
            anl tr0 {</a>}
        }            
        anl tr0 {      </div>}
        anl tr0 {    </td>}
        anl tr1 {    <td  width="20%" height="17%" align="center" valign="middle">}
        anl tr1 "      <a href = \"${regular}.html\">$name</a>"
        anl tr1 {    </td>}
        incr ic
    }

    anl tr0 {  </tr>}
    anl tr1 {  </tr>}
    a   html $tr0 
    a   html $tr1
    anl html {</table>}    
    ######################## colonne de droite ###

    anl html {<hr>}

    set instant [clock seconds]

    anl html "Créé le [clock format $instant -format %Y.%m.%d] à [clock format $instant -format %H:%M:%S] par"
    anl html "<PRE>    [info hostname]:$SCRIPT</PRE>"
    anl html " à partir des fichiers"
    a html "<PRE>"
    foreach f $FICHIERS {
        anl html "    <a href=\"/$DATABASES/$f\">$f</a>"
    }
    anl html "</PRE>"


    anl html {      </td>}    
    anl html {    </tr>}    

    anl html {  </table>}
    ######################## deux colonnes ###

    anl html {</body>}
    anl html {</html>}

    set fifi [file join $BASE $DYNAMIC trombines_$alias.html]
    set f [open $fifi w]
    fconfigure $f -encoding iso8859-1
    puts -nonewline $f $html
    close $f
}
